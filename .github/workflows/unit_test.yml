name: Unit-Test pipeline and publish results # Workflow name

on:
  workflow_dispatch:   # manual run
  pull_request:        # auto run only on PRs into main
    branches:
      - main

jobs:
  unit-tests-job: # name of the job
    runs-on: ubuntu-latest # VM on which this pipeline is currently running

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # official checkout action by Github Action

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -e .  

      - name: Run tests and generate JUnit XML # executing test cases
        run: |
          pytest --junitxml=report.xml || true

      - name: Parse test results
        id: parse
        run: |
          python scripts/parse_test_results.py
          branch=${{ github.ref_name }} 
          echo "Branch: $branch" >> slack_msg.txt  # append branch info
          msg=$(cat slack_msg.txt)
          echo "slack_message<<EOF" >> $GITHUB_OUTPUT
          echo "$msg" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Show Slack message (debug)
        run: cat slack_msg.txt

      - name: Verify Slack message
        run: test -s slack_msg.txt

      - name: Send Slack Notification
        if: always()
        uses: docker://technosophos/slack-notify
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TITLE: Unit Test Results
          SLACK_MESSAGE: ${{ steps.parse.outputs.slack_message }}
